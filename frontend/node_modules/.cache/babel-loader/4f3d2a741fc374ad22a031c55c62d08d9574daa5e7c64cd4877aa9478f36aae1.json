{"ast":null,"code":"var _jsxFileName = \"/home/tylercausey/skillstorm-project-1/frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { Header, Home } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appElement = document.getElementById(\"app\");\nconst App = () => {\n  _s();\n  const [warehouses, setWarehouses] = useState([]);\n  const [items, setItems] = useState([]);\n\n  // Effect hook to fetch warehouses and items data from the API when the component mounts.\n  useEffect(() => {\n    fetchWarehouses();\n    fetchItems();\n  }, []);\n\n  // Asynchronous function to fetch warehouses data from the backend API.\n  async function fetchWarehouses() {\n    try {\n      const response = await fetch(`http://localhost:8282/api/warehouses`);\n      const data = await response.json();\n      setWarehouses(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Asynchronous function to fetch items data from the backend API.\n  async function fetchItems() {\n    try {\n      const response = await fetch(`http://localhost:8282/api/items`);\n      const data = await response.json();\n      setItems(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      warehouses: warehouses,\n      items: items,\n      setItems: setItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"5TopEtjej2xN0jnGDCxkTrtH7v8=\");\n_c = App;\nconst root = createRoot(appElement);\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createRoot","useState","useEffect","Header","Home","jsxDEV","_jsxDEV","appElement","document","getElementById","App","_s","warehouses","setWarehouses","items","setItems","fetchWarehouses","fetchItems","response","fetch","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","render","$RefreshReg$"],"sources":["/home/tylercausey/skillstorm-project-1/frontend/src/index.js"],"sourcesContent":["import { createRoot } from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { Header, Home} from \"./components\";\n\nconst appElement = document.getElementById(\"app\")\n\nconst App = () => { \n    const [warehouses, setWarehouses] = useState([]);\n    const [items, setItems] = useState([]);\n\n    // Effect hook to fetch warehouses and items data from the API when the component mounts.\n    useEffect(()=> {\n        fetchWarehouses();\n        fetchItems();\n    }, [])\n\n    // Asynchronous function to fetch warehouses data from the backend API.\n    async function fetchWarehouses() {\n        try {\n            const response = await fetch(`http://localhost:8282/api/warehouses`);\n            const data = await response.json();\n            setWarehouses(data)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    // Asynchronous function to fetch items data from the backend API.\n    async function fetchItems() {\n        try {\n            const response = await fetch(`http://localhost:8282/api/items`);\n            const data = await response.json();\n            setItems(data)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    return ( \n        <div> \n            <Header/>\n            <Home warehouses={warehouses} items={items} setItems={setItems}/> \n        </div> \n    ) \n}\n\nconst root = createRoot(appElement)\nroot.render(<App />)"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,IAAI,QAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAK;IACXc,eAAe,CAAC,CAAC;IACjBC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeD,eAAeA,CAAA,EAAG;IAC7B,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCR,aAAa,CAACO,IAAI,CAAC;IACvB,CAAC,CAAC,OAAME,KAAK,EAAE;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;;EAEA;EACA,eAAeL,UAAUA,CAAA,EAAG;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgC,CAAC;MAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,QAAQ,CAACK,IAAI,CAAC;IAClB,CAAC,CAAC,OAAME,KAAK,EAAE;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;EAEA,oBACIhB,OAAA;IAAAmB,QAAA,gBACInB,OAAA,CAACH,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTvB,OAAA,CAACF,IAAI;MAACQ,UAAU,EAAEA,UAAW;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAtCKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwCT,MAAMqB,IAAI,GAAG/B,UAAU,CAACO,UAAU,CAAC;AACnCwB,IAAI,CAACC,MAAM,eAAC1B,OAAA,CAACI,GAAG;EAAAgB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAA,IAAAC,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}